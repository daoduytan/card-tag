{"version":3,"sources":["hook/show-password.ts","feature/auth/components/form-signup.tsx","feature/auth/components/form-login.tsx","feature/auth/components/auth-layout.tsx","feature/auth/page/login.tsx"],"names":["useShowPassword","useState","show","setShow","toggleShow","useCallback","useMemo","FormSignup","useForm","register","errors","handleSubmit","onSubmit","values","console","log","FormControl","fullWidth","style","marginBottom","TextField","error","fullname","variant","name","size","label","inputRef","required","value","message","render","FormHelperText","username","email","phone","code","password","type","InputProps","endAdornment","Button","color","LoginForm","loadUserSuccess","useAuth","useMutation","MUTATION_LOGIN","onError","err","onCompleted","login","loading","variables","then","data","localStorage","setItem","token","removeItem","useStyles","makeStyles","wrap","display","alignItems","justifyContent","minHeight","container","width","paddingBottom","paddingTop","maxWidth","heading","textAlign","title","fontWeight","fontSize","description","bottom","AuthLayout","children","classes","className","Typography","Divider","margin","Login","component","Link","to"],"mappings":"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","file":"static/js/8.bc88001d.chunk.js","sourcesContent":["import { useCallback, useMemo, useState } from 'react';\n\nconst useShowPassword = () => {\n  const [show, setShow] = useState<boolean>(false);\n\n  const toggleShow = useCallback(() => setShow(!show), [show]);\n\n  const value = useMemo(() => ({ show, setShow, toggleShow }), [\n    show,\n    setShow,\n    toggleShow,\n  ]);\n\n  return value;\n};\n\nexport { useShowPassword };\n","import { ErrorMessage } from '@hookform/error-message';\nimport {\n  Button,\n  FormControl,\n  FormHelperText,\n  TextField,\n} from '@material-ui/core';\nimport React, { FC } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { ToggleShowPassword } from '../../../components';\nimport { useShowPassword } from '../../../hook';\n\ninterface Props {}\n\nconst FormSignup: FC<Props> = () => {\n  const { show, toggleShow } = useShowPassword();\n  const { register, errors, handleSubmit } = useForm();\n  const onSubmit = (values: any) => {\n    console.log('values');\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <FormControl fullWidth style={{ marginBottom: 20 }}>\n        <TextField\n          error={!!errors.fullname}\n          variant=\"outlined\"\n          name=\"fullname\"\n          size=\"small\"\n          label=\"Họ và tên\"\n          inputRef={register({\n            required: { value: true, message: 'Không bỏ trống ô này' },\n          })}\n        />\n\n        <ErrorMessage\n          name=\"fullname\"\n          errors={errors}\n          render={({ message }) => {\n            return <FormHelperText>{message}</FormHelperText>;\n          }}\n        />\n      </FormControl>\n      <FormControl fullWidth style={{ marginBottom: 20 }}>\n        <TextField\n          error={!!errors.username}\n          variant=\"outlined\"\n          name=\"username\"\n          size=\"small\"\n          label=\"Tên đăng nhập\"\n          inputRef={register({\n            required: { value: true, message: 'Không bỏ trống ô này' },\n          })}\n        />\n\n        <ErrorMessage\n          name=\"username\"\n          errors={errors}\n          render={({ message }) => {\n            return <FormHelperText>{message}</FormHelperText>;\n          }}\n        />\n      </FormControl>\n      <FormControl fullWidth style={{ marginBottom: 20 }}>\n        <TextField\n          error={!!errors.email}\n          variant=\"outlined\"\n          name=\"email\"\n          size=\"small\"\n          label=\"Email\"\n          inputRef={register({\n            required: { value: true, message: 'Không bỏ trống ô này' },\n          })}\n        />\n\n        <ErrorMessage\n          name=\"email\"\n          errors={errors}\n          render={({ message }) => {\n            return <FormHelperText>{message}</FormHelperText>;\n          }}\n        />\n      </FormControl>\n      <FormControl fullWidth style={{ marginBottom: 20 }}>\n        <TextField\n          error={!!errors.phone}\n          variant=\"outlined\"\n          name=\"phone\"\n          size=\"small\"\n          label=\"Số điện thoại\"\n          inputRef={register({\n            required: { value: true, message: 'Không bỏ trống ô này' },\n          })}\n        />\n\n        <ErrorMessage\n          name=\"phone\"\n          errors={errors}\n          render={({ message }) => {\n            return <FormHelperText>{message}</FormHelperText>;\n          }}\n        />\n      </FormControl>\n      <FormControl fullWidth style={{ marginBottom: 20 }}>\n        <TextField\n          error={!!errors.code}\n          variant=\"outlined\"\n          name=\"code\"\n          size=\"small\"\n          label=\"Mã\"\n          inputRef={register({\n            required: { value: true, message: 'Không bỏ trống ô này' },\n          })}\n        />\n\n        <ErrorMessage\n          name=\"code\"\n          errors={errors}\n          render={({ message }) => {\n            return <FormHelperText>{message}</FormHelperText>;\n          }}\n        />\n      </FormControl>\n      <FormControl fullWidth style={{ marginBottom: 20 }}>\n        <TextField\n          error={!!errors.password}\n          variant=\"outlined\"\n          name=\"password\"\n          size=\"small\"\n          label=\"Mật khẩu\"\n          inputRef={register({\n            required: { value: true, message: 'Không bỏ trống ô này' },\n          })}\n          type={show ? 'password' : 'text'}\n          InputProps={{\n            endAdornment: (\n              <ToggleShowPassword show={show} toggleShow={toggleShow} />\n            ),\n          }}\n        />\n\n        <ErrorMessage\n          name=\"password\"\n          errors={errors}\n          render={({ message }) => {\n            return <FormHelperText>{message}</FormHelperText>;\n          }}\n        />\n      </FormControl>\n      <Button\n        type=\"submit\"\n        size=\"large\"\n        variant=\"contained\"\n        color=\"primary\"\n        fullWidth\n      >\n        Đăng ký\n      </Button>\n    </form>\n  );\n};\n\nexport { FormSignup };\n","import { ErrorMessage } from '@hookform/error-message';\nimport {\n  Button,\n  FormControl,\n  FormHelperText,\n  TextField,\n} from '@material-ui/core';\nimport React, { FC } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useShowPassword } from '../../../hook';\nimport { ToggleShowPassword } from '../../../components';\nimport { useMutation } from '@apollo/client';\nimport { MUTATION_LOGIN } from '../../../query';\n\nimport { useAuth } from '../../../context';\ninterface Props {}\n\nconst LoginForm: FC<Props> = () => {\n  const { loadUserSuccess } = useAuth();\n  const { show, toggleShow } = useShowPassword();\n  const { register, errors, handleSubmit } = useForm();\n\n  const [login, { loading }] = useMutation(MUTATION_LOGIN, {\n    onError(err) {\n      console.log(err);\n    },\n    onCompleted() {},\n  });\n\n  const onSubmit = (values: any) => {\n    login({\n      variables: {\n        ...values,\n      },\n    }).then((data) => {\n      if (data) {\n        console.log('data', data);\n        loadUserSuccess(data.data.login);\n        localStorage.setItem('token', data.data.login.token);\n\n        /* if (!values.remember) { */\n        /*   sessionStorage.setItem('token', data.data.login.token); */\n        /* } else { */\n        /*   localStorage.setItem('token', data.data.login.token); */\n        /* } */\n      } else {\n        localStorage.removeItem('token');\n      }\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <FormControl fullWidth style={{ marginBottom: 20 }}>\n        <TextField\n          error={!!errors.username}\n          variant=\"outlined\"\n          name=\"username\"\n          size=\"small\"\n          label=\"Tên đăng nhập\"\n          inputRef={register({\n            required: { value: true, message: 'Không bỏ trống ô này' },\n          })}\n        />\n\n        <ErrorMessage\n          name=\"username\"\n          errors={errors}\n          render={({ message }) => {\n            return <FormHelperText>{message}</FormHelperText>;\n          }}\n        />\n      </FormControl>\n      <FormControl fullWidth style={{ marginBottom: 20 }}>\n        <TextField\n          error={!!errors.password}\n          variant=\"outlined\"\n          name=\"password\"\n          size=\"small\"\n          type={show ? 'password' : 'text'}\n          InputProps={{\n            endAdornment: (\n              <ToggleShowPassword show={show} toggleShow={toggleShow} />\n            ),\n          }}\n          label=\"Mật khẩu\"\n          inputRef={register({\n            required: { value: true, message: 'Không bỏ trống ô này' },\n          })}\n        />\n\n        <ErrorMessage\n          name=\"password\"\n          errors={errors}\n          render={({ message }) => {\n            return <FormHelperText>{message}</FormHelperText>;\n          }}\n        />\n      </FormControl>\n      <Button\n        type=\"submit\"\n        size=\"large\"\n        variant=\"contained\"\n        color=\"primary\"\n        fullWidth\n      >\n        {loading ? 'Loading' : 'Đăng nhập'}\n      </Button>\n    </form>\n  );\n};\n\nexport { LoginForm };\n","import { Divider, makeStyles, Typography } from '@material-ui/core';\nimport React, { FC, ReactNode } from 'react';\n\ninterface Props {\n  title: string;\n  description?: string;\n  children: ReactNode;\n  bottom: ReactNode;\n}\n\nconst useStyles = makeStyles({\n  wrap: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    minHeight: '100vh',\n  },\n\n  container: {\n    width: '90%',\n    paddingBottom: 30,\n    paddingTop: 30,\n    maxWidth: 360,\n  },\n\n  heading: {\n    textAlign: 'center',\n    marginBottom: 30,\n  },\n\n  title: {\n    fontWeight: 700,\n    fontSize: 30,\n    marginBottom: 10,\n  },\n\n  description: {},\n\n  bottom: {\n    textAlign: 'center',\n  },\n});\n\nconst AuthLayout: FC<Props> = ({ children, title, bottom, description }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.wrap}>\n      <div className={classes.container}>\n        <div className={classes.heading}>\n          <Typography className={classes.title} variant=\"h4\">\n            {title}\n          </Typography>\n\n          {description && (\n            <Typography variant=\"subtitle2\">{description}</Typography>\n          )}\n        </div>\n        {children}\n\n        <div className={classes.bottom}>\n          <Divider style={{ margin: '25px 0' }} />\n          {bottom}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { AuthLayout };\n","import { Button, Typography } from '@material-ui/core';\nimport React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AuthLayout, LoginForm } from '../components';\n\ninterface Props {}\n\nconst Login: FC<Props> = () => {\n  return (\n    <AuthLayout\n      title=\"Login\"\n      bottom={\n        <>\n          <Typography style={{ marginBottom: 10 }}>\n            Bạn chưa có tài khoản\n          </Typography>\n\n          <Button\n            color=\"default\"\n            fullWidth\n            variant=\"contained\"\n            component={Link}\n            to=\"/signup\"\n          >\n            Đăng ký\n          </Button>\n        </>\n      }\n    >\n      <LoginForm />\n    </AuthLayout>\n  );\n};\n\nexport default Login;\n"],"sourceRoot":""}