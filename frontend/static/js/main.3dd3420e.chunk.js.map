{"version":3,"sources":["api/accessToken.ts","api/client.ts","routes/hoc-route.tsx","routes/routes.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/toggle-show-password/toggle-show-password.tsx","components/loading/loading.tsx","components/not-found/not-found.tsx","components/container/container.tsx","components/notification/notification.tsx","context/auth.tsx","query/auth.ts"],"names":["fetchAccessToken","a","axios","method","withCredentials","res","access_token","data","console","log","getAccessToken","token","localStorage","getItem","length","decode","jwtDecode","exp","get","Date","now","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","GuestRouter","children","rest","useAuth","isAuth","loading","render","location","to","pathname","state","from","UserRouter","useStyle","makeStyles","wrap","Home","lazy","Signup","Login","Profile","ProfileEdit","Routes","classes","loadUserSuccess","loadUserFailed","useQuery","QUERY_USER","onError","error","onCompleted","me","className","fallback","path","exact","component","NotFound","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","useStyles","password","cursor","color","active","ToggleShowPassword","show","toggleShow","class_name_password","InputAdornment","position","RemoveRedEye","onClick","display","alignItems","justifyContent","padding","full","top","bottom","right","left","Loading","CircularProgress","container","maxWith","paddingLeft","paddingRight","marginLeft","marginRight","Notification","autoHideDuration","maxSnack","anchorOrigin","vertical","horizontal","initalState","user","undefined","types","reducer","action","type","payload","defaultValue","dispatch","AuthContext","createContext","ProviderAuthContext","useReducer","value","useMemo","Provider","useContext","logout","MUTATION_LOGIN","gql"],"mappings":"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","file":"static/js/main.3dd3420e.chunk.js","sourcesContent":["import jwtDecode from 'jwt-decode';\nimport { get } from 'lodash';\nimport axios from 'axios';\n\nexport async function fetchAccessToken(): Promise<string> {\n  const url = `/refresh_token`;\n\n  try {\n    const res = await axios(url, {\n      method: 'POST',\n      withCredentials: true,\n    });\n\n    const { access_token } = res.data;\n\n    return access_token as string;\n  } catch (error) {\n    console.log('error', error);\n    return '';\n  }\n}\n\nexport const getToken = (): string => {\n  const token = localStorage.getItem('token');\n  return token || '';\n};\n\nexport const getAccessToken = async (): Promise<string> => {\n  const token = getToken();\n\n  if (!token || token.length === 0) return '';\n\n  const decode = jwtDecode(token);\n\n  const exp = get(decode, 'exp');\n\n  const isExpired = !exp || Date.now() >= exp * 1000;\n\n  if (isExpired) {\n    try {\n      const access_token = await fetchAccessToken();\n      return access_token;\n    } catch (error) {\n      return '';\n    }\n  }\n\n  return '';\n};\n","import { ApolloClient, createHttpLink, InMemoryCache } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { getAccessToken } from './accessToken';\n\nconst uri = `/graphql`;\n\nconst httpLink = createHttpLink({\n  uri,\n});\n\nconst authLink = setContext(async (_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = await getAccessToken();\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: `Bearer ${token}`,\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nexport { client };\n","import React, { FC, ReactNode } from 'react';\nimport { Redirect, Route, RouteProps } from 'react-router-dom';\nimport { Loading } from '../components';\nimport { useAuth } from '../context';\n\ninterface Props {\n  children: ReactNode;\n}\n\nconst GuestRouter: FC<Props & RouteProps> = ({\n  children,\n  ...rest\n}): JSX.Element => {\n  const { isAuth, loading } = useAuth();\n\n  if (loading) return <Loading />;\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        !isAuth ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/',\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n\nconst UserRouter: FC<Props & RouteProps> = ({\n  children,\n  ...rest\n}): JSX.Element => {\n  const { isAuth, loading } = useAuth();\n\n  if (loading) return <Loading />;\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isAuth ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport { GuestRouter, UserRouter };\n","import { useQuery } from '@apollo/client';\nimport { makeStyles } from '@material-ui/core';\nimport React, { FC, lazy, Suspense } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { Loading, NotFound } from '../components';\nimport { useAuth } from '../context';\nimport { QUERY_USER } from '../query';\nimport { GuestRouter, UserRouter } from './hoc-route';\n\ninterface Props {}\n\nconst useStyle = makeStyles({\n  wrap: {},\n});\n\nconst Home = lazy(() => import('../feature/home/page/home'));\nconst Signup = lazy(() => import('../feature/auth/page/signup'));\nconst Login = lazy(() => import('../feature/auth/page/login'));\nconst Profile = lazy(() => import('../feature/profile/page/profile'));\nconst ProfileEdit = lazy(() => import('../feature/profile/page/profile-edit'));\n\nconst Routes: FC<Props> = () => {\n  const classes = useStyle();\n  const { loadUserSuccess, loadUserFailed } = useAuth();\n  const { loading } = useQuery(QUERY_USER, {\n    onError(error) {\n      console.log('error', error);\n\n      loadUserFailed();\n    },\n    onCompleted(data) {\n      console.log('data', data);\n      loadUserSuccess(data.me);\n    },\n  });\n\n  if (loading) return <Loading />;\n\n  return (\n    <div className={classes.wrap}>\n      <BrowserRouter>\n        <Suspense fallback={<Loading />}>\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/profile/:username\" exact component={Profile} />\n            <UserRouter path=\"/edit\">\n              <ProfileEdit />\n            </UserRouter>\n            <GuestRouter path=\"/signup\">\n              <Signup />\n            </GuestRouter>\n            <GuestRouter path=\"/login\">\n              <Login />\n            </GuestRouter>\n            <Route component={NotFound} />\n          </Switch>\n        </Suspense>\n      </BrowserRouter>\n    </div>\n  );\n};\n\nexport { Routes };\n","import { ApolloProvider } from '@apollo/client';\nimport React from 'react';\nimport { client } from './api';\nimport { Notification } from './components';\nimport { ProviderAuthContext } from './context';\nimport { Routes } from './routes';\n\nfunction App() {\n  return (\n    <Notification>\n      <ApolloProvider client={client}>\n        <ProviderAuthContext>\n          <Routes />\n        </ProviderAuthContext>\n      </ApolloProvider>\n    </Notification>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { FC } from 'react';\nimport { InputAdornment, makeStyles } from '@material-ui/core';\nimport { RemoveRedEye } from '@material-ui/icons';\n\ninterface Props {\n  show: boolean;\n  toggleShow: () => void;\n}\n\nconst useStyles = makeStyles({\n  password: {\n    cursor: 'pointer',\n    color: '#ddd',\n\n    '&:hover': {\n      color: '#aaa',\n    },\n  },\n\n  active: {\n    color: '#333',\n  },\n});\n\nconst ToggleShowPassword: FC<Props> = ({ show, toggleShow }) => {\n  const classes = useStyles();\n\n  const class_name_password = show\n    ? `${classes.password} ${classes.active}`\n    : classes.password;\n\n  return (\n    <InputAdornment position=\"end\">\n      <RemoveRedEye onClick={toggleShow} className={class_name_password} />\n    </InputAdornment>\n  );\n};\n\nexport { ToggleShowPassword };\n","import { CircularProgress, makeStyles } from '@material-ui/core';\nimport React, { FC } from 'react';\n\ninterface Props {\n  full?: boolean;\n}\n\nconst useStyles = makeStyles({\n  wrap: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 15,\n  },\n\n  full: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n  },\n});\n\nconst Loading: FC<Props> = ({ full = false }) => {\n  const classes = useStyles();\n\n  const className = full ? `${classes.wrap} ${classes.full}` : classes.wrap;\n\n  return (\n    <div className={className}>\n      <CircularProgress />\n    </div>\n  );\n};\n\nexport { Loading };\n","import React, { FC } from 'react';\n\ninterface Props {}\n\nconst NotFound: FC<Props> = () => {\n  return <div>Not found</div>;\n};\n\nexport { NotFound };\n","import { makeStyles } from '@material-ui/core';\nimport React, { FC, ReactNode } from 'react';\n\ninterface Props {\n  children: ReactNode;\n}\n\nconst useStyle = makeStyles({\n  container: {\n    maxWith: 768,\n    paddingLeft: 15,\n    paddingRight: 15,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n});\n\nconst Container: FC<Props> = ({ children }) => {\n  const classes = useStyle();\n  return <div className={classes.container}>{children}</div>;\n};\n\nexport { Container };\n","import { SnackbarProvider } from 'notistack';\nimport React, { FC, ReactNode } from 'react';\n\ninterface NotificationProps {\n  children: ReactNode;\n}\n\nconst Notification: FC<NotificationProps> = ({ children }) => {\n  return (\n    <SnackbarProvider\n      autoHideDuration={1000}\n      maxSnack={3}\n      anchorOrigin={{\n        vertical: 'top',\n        horizontal: 'right',\n      }}\n    >\n      {children}\n    </SnackbarProvider>\n  );\n};\n\nexport { Notification };\n","import React, {\n  createContext,\n  FC,\n  ReactNode,\n  useContext,\n  useMemo,\n  useReducer,\n} from 'react';\n\n// interface\ninterface IState {\n  loading: boolean;\n  isAuth: boolean;\n  user: any;\n}\n\ninterface IAction {\n  type: string;\n  payload?: any;\n}\n\ninterface IContext {\n  state: IState;\n  dispatch: React.Dispatch<any>;\n}\n\n// reducer\n\nconst initalState: IState = {\n  loading: true,\n  user: undefined,\n  isAuth: false,\n};\n\nconst types = {\n  LOADING: 'AUTH/LOADING',\n  LOAD_USER_SUCCESS: 'AUTH/LOAD_USER_SUCCESS',\n  LOAD_USER_FAILED: 'AUTH/LOAD_USER_FAILED',\n  LOGOUT: 'AUTH/LOGOUT',\n};\n\nconst reducer = (state: IState, action: IAction): IState => {\n  switch (action.type) {\n    case types.LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case types.LOAD_USER_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n        isAuth: true,\n        loading: false,\n      };\n\n    case types.LOAD_USER_FAILED:\n      return {\n        ...state,\n        user: undefined,\n        isAuth: false,\n        loading: false,\n      };\n\n    case types.LOGOUT:\n      return {\n        ...initalState,\n        loading: false,\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst defaultValue = {\n  state: initalState,\n  dispatch: () => {},\n};\nconst AuthContext = createContext<IContext>(defaultValue);\n\ninterface Props {\n  children: ReactNode;\n}\n\nconst ProviderAuthContext: FC<Props> = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initalState);\n\n  const value = useMemo(() => ({ state, dispatch }), [state]);\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nconst useAuth = () => {\n  const value = useContext(AuthContext);\n\n  const { state, dispatch } = value;\n\n  const loadUserSuccess = (user: any) => {\n    dispatch({\n      type: types.LOAD_USER_SUCCESS,\n      payload: user,\n    });\n  };\n\n  const logout = () => {\n    dispatch({\n      type: types.LOGOUT,\n    });\n  };\n\n  const loadUserFailed = () => {\n    dispatch({ type: types.LOAD_USER_FAILED });\n  };\n\n  return { ...state, loadUserSuccess, logout, loadUserFailed };\n};\n\nexport { ProviderAuthContext, useAuth };\n","import { gql } from '@apollo/client';\n\nexport const MUTATION_LOGIN = gql`\n  mutation Login($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      _id\n      token\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  query Me {\n    me {\n      _id\n      fullname\n      phoneNumber\n      email\n      address\n\n      list {\n        _id\n        name\n        no\n        address\n      }\n      token\n    }\n  }\n`;\n"],"sourceRoot":""}